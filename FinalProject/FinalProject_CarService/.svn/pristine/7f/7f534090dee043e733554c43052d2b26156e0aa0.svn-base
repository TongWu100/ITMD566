package org.great.ctrl;

import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Map;

import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.great.entity.Power;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

public class BusinessServlet extends HttpServlet {

	private static final long serialVersionUID = 1L;

	@Override
	public void init(ServletConfig config) throws ServletException {

	}

	@Override
	protected void service(HttpServletRequest req, HttpServletResponse resp)throws ServletException, IOException {
		PrintWriter out = resp.getWriter();
		String uri = req.getRequestURI();
		String action = uri.substring(uri.lastIndexOf("/") + 1,uri.lastIndexOf("."));
		
		if (action.equals("webLogin")) {
			String username = req.getParameter("username");
			String password = req.getParameter("password");
			Map<String, String> map = BusinessDaoFactory.getInstance().getBusinessDao().login(username, password);
			if (map.get("isLogin").equals("true") ) {
				HttpSession session = req.getSession();
				session.setAttribute("userName", username);
				session.setAttribute("role", map.get("role"));
				session.setAttribute("email", map.get("email"));
				out.write("Success");
			} else {
				out.write("Fail");
			}
			out.close();
			
		} else if (action.equals("exit")) {
			HttpSession session = req.getSession();
			session.removeAttribute("userName");
			session.removeAttribute("role");
			session.removeAttribute("email");
			resp.sendRedirect("login.jsp");
		}else if (action.equals("listshow")) {
			String rightid = req.getParameter("rightid");
			Power power = BusinessDaoFactory.getInstance().getBusinessDao().select_power(rightid);
			JSONArray jsonArr = JSONArray.fromObject(power);
			String jsonStr = jsonArr.toString();
			out.println(jsonStr);
			out.close();
		}
	}

	@Override
	public void destroy() {

	}

	public String getDate() {
		Date dt = new Date();
		SimpleDateFormat matter = new SimpleDateFormat("yyyy/MM/dd");
		return matter.format(dt);
	}

	public String decode(HttpServletRequest req) {
		String str = req.getParameter("pakage");
		try {
			str = URLDecoder.decode(str, "utf-8");
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
		}
		return str;
	}

	public <Anything> void outPrintObject(Anything obj, PrintWriter out) {
		if (obj != null) {
			out.print(JSONObject.fromObject(obj).toString());
		} else {
			out.print("failed");
		}
		out.close();
	}

	public <Anything> void outPrintArray(Anything obj, PrintWriter out) {
		if (obj != null) {
			out.print(JSONArray.fromObject(obj).toString());
		} else {
			out.print("failed");
		}
		out.close();
	}

	public void outPrintString(boolean flag, PrintWriter out) {
		if (flag) {
			out.print("done");
		} else {
			out.print("failed");
		}
		out.close();
	}

	public String[] getArr(HttpServletRequest req) {
		String s[] = decode(req).split("\"");
		String arr[] = s[1].split(",");
		return arr;
	}
}
